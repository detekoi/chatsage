name: Deploy StreamSage to Cloud Run
on: push

env:
  GCP_PROJECT_ID: 'streamsage-bot'
  GCP_REGION: 'us-central1'
  CLOUD_RUN_SERVICE_NAME: 'chatsage'
  TWITCH_BOT_USERNAME: 'StreamSageTheBot'
  TWITCH_CHANNELS: 'parfaitfair,parfaittest'
  GEMINI_MODEL_ID: 'gemini-2.0-flash-001'
  LOG_LEVEL: 'info'
  STREAM_INFO_FETCH_INTERVAL_SECONDS: '120'
  NODE_ENV: 'production'
  PINO_PRETTY_LOGGING: 'false'

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Debug Info
        run: |
          echo "GitHub Repository: ${{ github.repository }}"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Actor: ${{ github.actor }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/907887386166/locations/global/workloadIdentityPools/ghactions-pool/providers/ghactions-provider'
          service_account: 'cloud-run-deployer@streamsage-bot.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Create env file
        run: |
          cat > .env.yaml << EOF
          NODE_ENV: "${{ env.NODE_ENV }}"
          LOG_LEVEL: "${{ env.LOG_LEVEL }}"
          PINO_PRETTY_LOGGING: "${{ env.PINO_PRETTY_LOGGING }}"
          TWITCH_BOT_USERNAME: "${{ env.TWITCH_BOT_USERNAME }}"
          TWITCH_CHANNELS: "parfaitfair,parfaittest"
          GEMINI_MODEL_ID: "${{ env.GEMINI_MODEL_ID }}"
          STREAM_INFO_FETCH_INTERVAL_SECONDS: "${{ env.STREAM_INFO_FETCH_INTERVAL_SECONDS }}"
          EOF

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
          region: ${{ env.GCP_REGION }}
          source: .
          metadata: ./service.yaml

      - name: Show Deployment URL
        run: |
          echo "Deployed to Cloud Run: ${{ steps.deploy.outputs.url }}"